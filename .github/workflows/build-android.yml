name: Build app for Android

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.x'
          channel: 'stable'
      
      - name: Disable flutter analytics
        run: |
          flutter config --no-analytics
          dart --disable-analytics

      - run: flutter pub get

      # Comment out when tests will be there
      # - run: flutter test
      
      - name: Extract env
        run: |
            sudo wget -q "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64" -O "/usr/bin/yq"
            sudo chmod +x /usr/bin/yq
            echo "APP_VERSION=$(yq eval .version pubspec.yaml | cut -d+ -f1)" >> $GITHUB_ENV
            echo "COMMIT_MESSAGE=$(git log -n 1 --oneline | cut -d' ' -f2- -)" >> $GITHUB_ENV
            echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Set signing config
        run: |
            echo "${{ secrets.SIGNING_KEYSTORE_CONTENT }}" | base64 -d - > upload-keystore.jks
            export X_KEYSTORE_PATH="$(pwd)/upload-keystore.jks"
            echo "X_KEYSTORE_PATH=$X_KEYSTORE_PATH" >> $GITHUB_ENV
            echo "${{ secrets.SIGNING_PROPERTIES_CONTENT }}" > android/key.properties

      - run: flutter build apk --release
        env:
          X_KEYSTORE_PATH: ${{ env.X_KEYSTORE_PATH }}

      - uses: actions/upload-artifact@v1      
        with:        
          name: release-apk        
          path: build/app/outputs/apk/release/app-release.apk

  release:
    name: Create github release
    runs-on: ubuntu-latest

    steps:
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.APP_VERSION }}
          name: ${{ env.COMMIT_MESSAGE }}
          fail_on_unmatched_files: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.CURRENT_BRANCH == 'main' && startsWith(env.COMMIT_MESSAGE, '[Release]') }}
